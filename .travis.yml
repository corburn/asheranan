---
sudo: required
dist: trusty

#language: python
#python: "2.7"
language: generic

services:
  - docker

env:
  - ROLE="corburn.lxd"
  - ROLE="corburn.nginx"

#addons:
#  apt:
#    sources:
#      - sourceline: 'ppa:ansible/ansible'
#    packages:
#      - ansible

before_install:
  - docker pull ubuntu:xenial
  - export CONTAINER_ID=$(docker run --detach --volume="${PWD}/roles:/etc/ansible/roles:ro" --privileged ubuntu:xenial)
  - echo $CONTAINER_ID
  # Make sure everything's up to date.
  - sudo add-apt-repository ppa:ansible/ansible -y
  - sudo apt-get update -qq

install:
  # Add ansible.cfg to pick up roles path.
  #- "printf '[defaults]\nroles_path = ../' > ansible.cfg"
  - sudo apt-get install -y ansible
  # Edit ansible.cfg to pick up roles path relative to the repository root and not the test directory.
  - sed -i 's:^.*roles_path.*:roles_path = ./roles/:' ansible.cfg
  # Connect with basic user instead of root to test privilege escalation.
  # NOTE: This does not check excessive privilege escalation.
  - "sed -i '/- hosts: all/a \\ \\ remote_user: '\"$USER\" roles/${ROLE}/tests/test.yml"

script:
  # Check the role/playbook's syntax.
  - ansible-playbook -i 'localhost,' --syntax-check ./roles/${ROLE}/tests/test.yml
  # Run the role/playbook with ansible-playbook.
  - ansible-playbook -i 'localhost,' --connection=local ./roles/${ROLE}/tests/test.yml
  # Run the role/playbook again, checking to make sure it's idempotent.
  - >
    ansible-playbook -i 'localhost,' --connection=local ./roles/${ROLE}/tests/test.yml
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)
