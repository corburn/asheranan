---
# "This PPA is maintained by volunteers and is not distributed by nginx.org.
# It has some additional compiled-in modules and may be more fitting for your
# environment."
# https://www.nginx.com/resources/wiki/start/topics/tutorials/install/
#- name: add nginx development PPA
#  apt_repository:
#    repo: 'ppa:nginx/development'
#    state: present
#    update_cache: yes

# Official Debian/Ubuntu packages 
# https://www.nginx.com/resources/wiki/start/topics/tutorials/install/
- name: Create /etc/apt/sources.list.d/nginx.list
  copy:
    content: >
      deb http://nginx.org/packages/ubuntu/ {{ ansible_distribution_release }} nginx
      deb-src http://nginx.org/packages/ubuntu/ {{ ansible_distribution_release }} nginx
    dest: /etc/apt/sources.list.d/nginx.list
    group: root
    mode: 0644
    owner: root
  become: yes

- name: Install latest nginx
  apt:
    autoremove: yes
    name: nginx
    state: latest
    update_cache: yes
  become: yes

- name: Copy github.com/h5bp/server-configs-nginx
  copy:
    backup: yes
    dest: /etc/nginx/
    directory_mode: 755
    group: root
    mode: 0644
    owner: root
    src: server-configs-nginx/
  notify:
    - restart nginx
  become: yes

- name: Configure nginx worker process user and log files
  lineinfile:
    # Only the first item should trigger a backup
    backup: '{{ item.backup is defined and item.backup }}'
    dest: /etc/nginx/nginx.conf
    regexp: '{{ item.regexp }}'
    line: '{{ item.line }}'
    # TODO: enable validation
    #validate: 'nginx -t -c %s'
  with_items:
    # Replace in the global scope user www www;
    - { regexp: ^user, line: user www-data www-data;, backup: true }
    # Replace in the global scope: error_log logs/error.log warn;
    - { regexp: ^error_log, line: error_log /var/log/nginx/error.log; }
    # Replace in the http scope: access_log logs/access.log main;
    # TODO: Is it possible to use bakref to match the original indentation
    # instead of hardcoding an assumption of 2 spaces?
    - { regexp: '^[ \t]*access_log', line: '  access_log /var/log/nginx/access.log;' }
  become: yes
    
- name: copy default site with EFF certbot webroot SSL autorenewal
  copy:
    backup: yes
    src: default
    dest: /etc/nginx/sites-available/default
  become: yes

- name: enable default site
  file:
    force: yes
    src: /etc/nginx/sites-enabled/default
    dest: /etc/nginx/sites-available/default
    state: link
  notify:
    - restart nginx
  become: yes
