# https://insights.ubuntu.com/2015/11/06/using-lxd-with-a-file-based-zfs-pool-on-ubuntu-wily/
#
# TODO: Users must be a member of the lxd group to use LXD
# To implement this, add a users task that iterates over a list of users.
# The list of users can be a variable the playbook assigns as, for example, the list of all users.
---
- name: add lxd ppa
  apt_repository: 
    repo: ppa:ubuntu-lxc/lxd-stable
    mode: 0644
    update_cache: yes
  become: yes

- name: install lxd
  apt:
    name: '{{ item }}'
    state: latest
    update_cache: yes
  with_items:
    - lxd
    - criu
    - lxd-tools
  become: yes

#- add-apt-repository ppa:zfs-native/stable

- name: install zfsutil-linux
  apt:
    name: zfsutils-linux
    state: latest
    update_cache: yes
  become: yes
    
# FIXME: This task will fail if the module is not already present.
# How do I ensure it is present?
#
# fatal: [localhost]: FAILED! => {"changed": false, "failed": true,
# "msg": "modprobe: ERROR: ../libkmod/libkmod.c:586 kmod_search_moddep() could
# not open moddep file '/lib/modules/3.19.0-66-generic/modules.dep.bin'\nmodprobe:
# FATAL: Module zfs not found in directory /lib/modules/3.19.0-66-generic\n",
# "name": "zfs", "params": "", "state": "present"}
#
#- name: modprobe zfs
#  modprobe: name=zfs state=present
#  become: yes

  #- name: Create postgres zpool
  #  command: zpool create -O compression=gzip postgres /dev/sdb -o ashift=12 -O    secondarycache=all
  #          creates=/postgres
  #

  # TODO: enable ZFS compression property
  # TODO: restrict primary/secondary cache properties to metadata based on:
  # "It is possible to improve performance when a zvol or dataset hosts an
  # application that does its own caching by caching only metadata [...]
  # Another would be a virtual machine using ZFS."
  # See http://open-zfs.org/wiki/Performance_tuning
  # truncate --size=300G /var/zpool/lxd.vdev creates=/var/zpool/lxd.vdev
  #
  # I found the location of the zfs.img file by running the command: sudo zpool status
- name: lxd init
  command: lxd init --auto --storage-backend=zfs --storage-pool=lxd --storage-create-loop=1 creates=/var/lib/lxd/zfs.img
  become: yes

# TODO: check if compression is on by default and how to detect if a change was made
#- name: zfs set compression=on lxd
#  command: zfs set compression=on lxd
#  zfs: name=lxd compression=on

# TODO: validate
- template: src=lxd-bridge.j2 dest=/etc/default/lxd-bridge backup=yes
  notify: restart lxd-bridge
  become: yes

- name: LXD service is enabled and started
  service: name=lxd enabled=yes state=started
  become: yes
